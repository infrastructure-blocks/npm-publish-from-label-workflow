name: NPM Publish From Label

on:
  workflow_call:
    secrets:
      github-pat:
        description: |
          The personal access token used to push the commit generated by `npm version` on the release branch.
        required: true
      npm-token:
        description: |
          The NPM token used to publish the packages.
        required: true

# Cancel ongoing workflows. Especially useful on dev branches.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  status-report-action-repository: infrastructure-blocks/npm-publish-from-label-workflow

jobs:
  # TODO: we should enforce the event type is pull request at the beginning. We can make a an action for that.
  check-event:
    runs-on: ubuntu-22.04
    outputs:
      skip: ${{ steps.check-event.outputs.skip }}
    steps:
      - id: check-event
        run: |
          # We should skip if we are processing a close event without a merge.
          if [[ "${{ github.event.action == 'closed' && !github.event.pull_request.merged }}" == "true" ]]
          then
            echo "skip=true" >> "${GITHUB_OUTPUT}"
          else
            echo "skip=false" >> "${GITHUB_OUTPUT}"
          fi
  check-has-semver-label:
    needs:
      - check-event
    if: ${{ needs.check-event.outputs.skip != 'true' }}
    permissions:
      pull-requests: write
    uses: infrastructure-blocks/check-has-semver-label-workflow/.github/workflows/workflow.yml@v1
  npm-publish-from-label:
    runs-on: ubuntu-22.04
    needs:
      - check-has-semver-label
    if: ${{ needs.check-event.outputs.skip != 'true' }}
    permissions:
      contents: read # Required to check out your project on dev branches
      pull-requests: write # Required to post comments.
    steps:
      - name: Evaluating operation context
        id: context
        shell: bash
        run: |
          if [[ "${{ needs.check-has-semver-label.outputs.matched-label }}" == "no version" ]]
          then
            echo "state=no-version" >> "${GITHUB_OUTPUT}"
          elif [[ "${{ github.event.action == 'closed' && github.event.pull_request.merged }}" != "true" ]]
          then
            echo "state=developing" >> "${GITHUB_OUTPUT}"
          else
            echo "state=releasing" >> "${GITHUB_OUTPUT}"
          fi

      - if: ${{ steps.context.outputs.state == 'no-version' }}
        uses: infrastructure-blocks/status-report-action@v1
        with:
          body: |
            :+1:  **Notice**: found "${{ needs.check-has-semver-label.outputs.matched-label }}" label, understood. Won't be publishing NPM package.

      # Check out and set up the tooling. It's possible we need dev packages to build, so we install them.
      # In prerelease mode, we check out the current branch with the GITHUB_TOKEN.
      - if: ${{ steps.context.outputs.state == 'developing' }}
        uses: actions/checkout@v4
      # In release mode, we check out the base branch with the PAT. We use the PAT for future git commands.
      - if: ${{ steps.context.outputs.state == 'releasing' }}
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.github-pat }}
          ref: ${{ github.base_ref }}
      # To configure git, we just pick whatever is in the HEAD commit.
      - if: ${{ steps.context.outputs.state == 'releasing' }}
        run: |
          username=$(git log -1 --pretty=format:'%an')
          email=$(git log -1 --pretty=format:'%ae')

          echo "::debug::configuring git user and email to: '${username}' '${email}'"
          git config user.name "${username}"
          git config user.email "${email}"
      - if: ${{ steps.context.outputs.state != 'no-version' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - if: ${{ steps.context.outputs.state != 'no-version' }}
        run: npm ci

      # Prerelease
      - if: ${{ steps.context.outputs.state == 'developing' }}
        id: npm-publish-prerelease
        uses: infrastructure-blocks/npm-publish-action@v1
        env:
          NPM_TOKEN: ${{ secrets.npm-token }}
        with:
          version: ${{ needs.check-has-semver-label.outputs.matched-label }}
          prerelease: true
          dist-tags: git-pr-${{ github.event.pull_request.number }},git-sha-${{ github.event.pull_request.head.sha }}
      - if: ${{ failure() && steps.context.outputs.state == 'developing' }}
        uses: infrastructure-blocks/status-report-action@v1
        with:
          body: |
            :boom: **Error**: Unable to publish NPM prerelease package with version bump {{ needs.check-has-semver-label.outputs.matched-label }}
            See [action logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }})
      - if: ${{ steps.context.outputs.state == 'developing' }}
        uses: infrastructure-blocks/status-report-action@v1
        with:
          body: |
            :rocket: **Success**: Successfully published prerelease version!
            
            Packages: 
            - ${{ join(fromJson(steps.npm-publish-prerelease.outputs.links), '
            - ') }}

      # Release.
      - if: ${{ steps.context.outputs.state == 'releasing' }}
        id: npm-publish-release
        uses: infrastructure-blocks/npm-publish-action@v1
        env:
          NPM_TOKEN: ${{ secrets.npm-token }}
        with:
          version: ${{ needs.check-has-semver-label.outputs.matched-label }}
          prerelease: false
          dist-tags: latest,git-sha-${{ github.event.pull_request.head.sha }}
      - if: ${{ steps.context.outputs.state == 'releasing' }}
        run: |
          git push origin
          # Only push the tag we're responsible for.
          git push origin ${{ steps.npm-publish-release.outputs.git-tag }}
      - if: ${{ failure() && steps.context.outputs.state == 'releasing' }}
        uses: infrastructure-blocks/status-report-action@v1
        with:
          body: |
            :boom: **Error**: Unable to publish NPM release package with version bump {{ needs.check-has-semver-label.outputs.matched-label }}
            See [action logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }})
      - if: ${{ steps.context.outputs.state == 'releasing' }}
        uses: infrastructure-blocks/status-report-action@v1
        with:
          body: |
            :rocket: **Success**: Successfully published release version!
            
            Packages: 
            - ${{ join(fromJson(steps.npm-publish-release.outputs.links), '
            - ') }}
            
            Git tag: [${{ steps.npm-publish-release.outputs.git-tag }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.npm-publish-release.outputs.git-tag }})
